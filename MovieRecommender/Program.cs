using System.Diagnostics;

namespace MovieRecommender
{
    internal static class Program
    {
        /// <summary>
        ///  The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            // To customize application configuration such as set high DPI settings or default font,
            // see https://aka.ms/applicationconfiguration.
            ApplicationConfiguration.Initialize();
            Program.runPythonScript(@"recommender.py", "asdf");
            //Application.Run(new Form1());

        }

        public static void runPythonScript(String cmd, String args)
        {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = "C:/Users/maxim/AppData/Local/Programs/Python/Python310/python.exe";
            //start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
            start.Arguments = cmd;
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            
            Process process = new Process();
            process.StartInfo = start;

            process.ErrorDataReceived += (sender, e) =>
            {
                if (!String.IsNullOrEmpty(e.Data))
                {
                    Console.WriteLine(e.Data);
                }
            };

            process.OutputDataReceived += new DataReceivedEventHandler((sender, e) =>
            {
                // Prepend line numbers to each line of the output.
                if (!String.IsNullOrEmpty(e.Data))
                {
                    Console.WriteLine(e.Data);
                }
            });

            process.Exited += (sender, e) =>
            {
                Console.WriteLine("process exited");
            };
            process.Start();

            process.BeginErrorReadLine();
            process.BeginOutputReadLine();
            process.WaitForExit();

            /*using (Process process = Process.Start(start))
            {
                process.
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    //return result;
                    Console.WriteLine(result);
                }
            } */
        }
    }
}